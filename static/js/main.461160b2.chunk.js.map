{"version":3,"sources":["reportWebVitals.ts","assets/img/logo.svg","pages/Help/help.tsx","components/BaseInputDate/BaseInputDate.tsx","components/BaseInputText/BaseInputText.tsx","components/Form/TodoAddForm/TodoAddForm.tsx","components/Form/TodoSearchForm/TodoSearchForm.tsx","components/BaseBtn/BaseBtn.tsx","components/Forms/Forms.tsx","components/BaseInputCheckbox/BaseInputCheckbox.tsx","components/TodoItem/TodoItem.tsx","components/TodoTable/TodoTable.tsx","logic/todoApp.ts","pages/Todo/todo.tsx","routes/index.tsx","constants/index.ts","components/Navigation/Navigation.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","View","className","src","logo","alt","href","target","rel","id","name","labelText","register","required","htmlFor","type","ref","onAddTodo","useForm","handleSubmit","reset","onSubmit","data","todo","index","startDate","finishDate","task","isDone","value","onSearchTodo","searchText","btnText","onClick","useState","isSearch","stateChange","e","onCheck","checked","onChange","formatDate","date","Date","toLocaleDateString","onRemove","todos","map","item","i","TodoApp","getTodos","checkInput","inputTodo","addTodo","length","push","alert","changeState","changeIndex","checkFoolControle","window","confirm","deleteTodo","deleteIndex","filter","textSearchTodo","FILTER_TODOS","indexOf","this","instance","app","getInstance","setTodos","filterTodo","routes","path","exact","children","routesNav","route","to","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.461160b2.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport logo from '../../assets/img/logo.svg';\nimport './help.css';\n\nfunction View() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>Help</h1>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default View;\n","import React from 'react';\nimport { InputType } from 'src/types/input';\nimport './BaseInputDate.css';\n\nfunction View({ id, name, labelText, register, required }: InputType) {\n\n  return (\n    <div className=\"forms__box\">\n      <label className=\"forms__label\" htmlFor={id}>\n        {labelText}\n      </label>\n      <input\n        id={id}\n        name={name}\n        type=\"date\"\n        className=\"forms__input\"\n        ref={register({ required })}\n      />\n    </div>\n  );\n}\n\nexport default View;\n","import React from 'react';\nimport { InputType } from 'src/types/input';\nimport './BaseInputText.css';\n\n\nfunction View({ id, name, labelText, register, required }: InputType) {\n  return (\n    <div className=\"forms__box\">\n      <label className=\"forms__label\" htmlFor={id}>\n        {labelText}\n      </label>\n      <input\n        id={id}\n        name={name}\n        type=\"text\"\n        className=\"forms__input\"\n        ref={register({ required })}\n      />\n    </div>\n  );\n}\n\nexport default View;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { InputType } from 'src/types/input';\nimport { Todo } from 'src/types/todo';\nimport BaseInputDate from '../../BaseInputDate/BaseInputDate';\nimport BaseInputText from '../../BaseInputText/BaseInputText';\nimport '../forms.css';\n\ntype Props = {\n  onAddTodo: (todo: Todo) => void;\n};\n\ntype InputTodo = {\n  startDate: Date | null;\n  finishDate: Date | null;\n  task: string;\n};\n\nfunction View({ onAddTodo }: Props) {\n  const { register, handleSubmit, reset } = useForm<InputType>();\n\n  const onSubmit = (data: InputTodo) => {\n    const todo: Todo = {\n      index: 0,\n      startDate: data.startDate,\n      finishDate: data.finishDate,\n      task: data.task,\n      isDone: false,\n    };\n\n    onAddTodo(todo);\n    reset();\n  };\n\n  return (\n    <form className=\"forms\" onSubmit={handleSubmit(onSubmit)}>\n      <BaseInputDate\n        id=\"startDate\"\n        name=\"startDate\"\n        labelText=\"開始日\"\n        register={register}\n        required\n      />\n      <BaseInputDate\n        id=\"finishDate\"\n        name=\"finishDate\"\n        labelText=\"終了日\"\n        register={register}\n        required\n      />\n      <BaseInputText\n        id=\"task\"\n        name=\"task\"\n        labelText=\"タスク内容\"\n        register={register}\n        required\n      />\n\n      <input className=\"forms__submit\" type=\"submit\" value=\"追加\" />\n    </form>\n  );\n}\n\nexport default View;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { InputType } from 'src/types/input';\nimport BaseInputText from '../../BaseInputText/BaseInputText';\nimport '../forms.css';\n\ntype Props = {\n  onSearchTodo: (searchText: string) => void;\n};\n\ntype InputSearch = {\n  searchText: string;\n};\n\nfunction View({ onSearchTodo }: Props) {\n  const { register, handleSubmit } = useForm<InputType>();\n\n  const onSubmit = (data: InputSearch) => {\n    onSearchTodo(data.searchText);\n  };\n\n  return (\n    <form className=\"forms\" onSubmit={handleSubmit(onSubmit)}>\n      <BaseInputText\n        id=\"search\"\n        name=\"searchText\"\n        labelText=\"検索\"\n        register={register}\n        required\n      />\n      <input className=\"forms__submit\" type=\"submit\" value=\"検索\" />\n    </form>\n  );\n}\n\nexport default View;\n","import React from 'react';\nimport './BaseBtn.css';\n\ntype Props = {\n  className?: string;\n  btnText: string;\n  onClick: (e: any) => void;\n};\n\nfunction View({ className, btnText, onClick }: Props) {\n  return (\n    <button className={`${className}`} onClick={onClick}>\n      {btnText}\n    </button>\n  );\n}\n\nexport default View;\n","import React, { useState } from 'react';\nimport { Todo } from 'src/types/todo';\nimport AddForm from '../Form/TodoAddForm/TodoAddForm';\nimport SearchForm from '../Form/TodoSearchForm/TodoSearchForm';\nimport BaseBtn from '../BaseBtn/BaseBtn';\nimport './Forms.css';\n\ntype Props = {\n  onAddTodo: (todo: Todo) => void;\n  onSearchTodo: (searchText: string) => void;\n};\n\nfunction View({ onAddTodo, onSearchTodo }: Props) {\n  const [isSearch, stateChange] = useState(false);\n\n  const modeChange = () => {\n    stateChange(!isSearch);\n    onSearchTodo(''); //初期化\n  };\n\n  return (\n    <div>\n      <BaseBtn\n        onClick={(e) => modeChange()}\n        btnText={!isSearch ? 'タスク検索' : 'タスク追加'}\n      />\n      {!isSearch ? (\n        <AddForm onAddTodo={onAddTodo} />\n      ) : (\n        <SearchForm onSearchTodo={onSearchTodo} />\n      )}\n    </div>\n  );\n}\n\nexport default View;\n","import React from 'react';\nimport './BaseInputCheckbox.css';\n\ntype Props = {\n  isDone: boolean;\n  onCheck: () => void;\n};\n\nfunction View({ isDone, onCheck }: Props) {\n  return <input type=\"checkbox\" checked={isDone} onChange={onCheck} />;\n}\n\nexport default View;\n","import React from 'react';\nimport { Todo } from 'src/types/todo';\nimport BaseInputCheckbox from '../BaseInputCheckbox/BaseInputCheckbox';\nimport BaseBtn from '../BaseBtn/BaseBtn';\nimport './TodoItem.css'\n\ntype Props = {\n  todo: Todo;\n  onCheck: (index: number) => void;\n  onRemove: (index: number) => void;\n};\n\nfunction formatDate(date: Date | null) {\n  /**\n   * 日付の形式を変える\n   */\n  if (date == null) return '--/--/--';\n  return new Date(date).toLocaleDateString();\n}\n\nfunction View({todo, onCheck, onRemove }: Props) {\n  return (\n    <tr>\n      <td>\n        <BaseInputCheckbox\n          isDone={todo.isDone}\n          onCheck={() => onCheck(todo.index)}\n        />\n      </td>\n      <td>{formatDate(todo.startDate)}</td>\n      <td>{formatDate(todo.finishDate)}</td>\n      <td>{todo.task}</td>\n      <td>\n        <BaseBtn btnText=\"x\" onClick={() => onRemove(todo.index)} />\n      </td>\n    </tr>\n  );\n}\n\nexport default View;\n","import React from 'react';\nimport { Todo } from 'src/types/todo';\nimport TodoItem from '../TodoItem/TodoItem';\nimport './TodoTable.css';\n\ntype Props = {\n  todos: Todo[];\n  onCheck: (index: number) => void;\n  onRemove: (index: number) => void;\n};\n\nfunction View({ todos, onCheck, onRemove }: Props) {\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <th>Done</th>\n            <th>開始日</th>\n            <th>終了日</th>\n            <th>タスク</th>\n            <th>消去</th>\n          </tr>\n        </thead>\n        <tbody>\n          {todos.map((item, i) => (\n            <TodoItem\n              key={`todo_${i}`}\n              todo={item}\n              onCheck={onCheck}\n              onRemove={onRemove}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default View;\n","import { Todo } from 'src/types/todo';\n\nclass TodoApp {\n  private static instance: TodoApp;\n  todos: Todo[] = [];\n\n  private constructor() {}\n\n  public static getInstance(): TodoApp {\n    if (this.instance == null) {\n      this.instance = new TodoApp();\n      return this.instance;\n    } else {\n      return this.instance;\n    }\n  }\n\n  public getTodos = (): Todo[] => {\n    return this.todos;\n  };\n\n  private checkInput = (inputTodo: Todo): boolean => {\n    if (\n      inputTodo.startDate == null ||\n      inputTodo.finishDate == null ||\n      inputTodo.task === ''\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  public addTodo = (inputTodo: Todo): boolean => {\n    if (this.checkInput(inputTodo)) {\n      inputTodo.index = this.todos.length;\n      this.todos.push(inputTodo);\n      return true;\n    }\n    alert('入力漏れがあります。');\n    return false;\n  };\n\n  public changeState = (changeIndex: number): void => {\n    this.todos[changeIndex].isDone = !this.todos[changeIndex].isDone;\n  };\n\n  private checkFoolControle = (isDone: boolean): boolean => {\n    //　すでに達成済み\n    if (isDone) return true;\n    // 達成してないのに消そうとしている\n    const isOK = window.confirm(\n      '終了していないタスクを削除しようとしています。\\nよろしいですか?'\n    );\n    return isOK;\n  };\n\n  public deleteTodo = (deleteIndex: number): void => {\n    const isDone = this.todos[deleteIndex].isDone;\n    if (this.checkFoolControle(isDone)) {\n      this.todos = this.todos.filter((todo, i) => deleteIndex !== i);\n    }\n  };\n\n  public textSearchTodo = (searchText: string): Todo[] => {\n    const FILTER_TODOS = this.todos.filter((todo) => todo.task.indexOf(searchText) !== -1);\n\n    if (FILTER_TODOS.length > 0) {\n      return FILTER_TODOS;\n    } else {\n      return this.todos;\n    }\n  };\n}\n\nexport { TodoApp };\n","import React, { useState } from 'react';\nimport { Todo } from 'src/types/todo';\nimport Forms from '../../components/Forms/Forms';\nimport Todos from '../../components/TodoTable/TodoTable';\nimport './todo.css';\nimport { TodoApp } from '../../logic/todoApp';\n\nconst app = TodoApp.getInstance();\n\nfunction View() {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const addTodo = (todo: Todo): void => {\n    const isSuccess = app.addTodo(todo);\n    if (isSuccess) {\n      setTodos([...app.getTodos()]);\n    }\n  };\n\n  const deleteTodo = (index: number): void => {\n    app.deleteTodo(index);\n    setTodos([...app.getTodos()]);\n  };\n\n  const changeTodo = (index: number): void => {\n    app.changeState(index);\n    setTodos([...app.getTodos()]);\n  };\n\n  const searchTodo = (searchText: string): void => {\n    const filterTodo = app.textSearchTodo(searchText);\n    setTodos([...filterTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <main className=\"App-body\">\n        <h1>Todo</h1>\n        <Forms onAddTodo={addTodo} onSearchTodo={searchTodo} />\n        <Todos\n          todos={todos}\n          onCheck={changeTodo}\n          onRemove={deleteTodo}\n        />\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </main>\n    </div>\n  );\n}\n\nexport default View;\n","import { Route } from '../../src/types/index';\nimport Help from '../pages/Help/help';\nimport Todo from '../pages/Todo/todo';\n\nconst routes: Route[] = [\n  {\n    path: '/',\n    exact: true,\n    children: <Help />,\n  },\n  {\n    path: '/todo',\n    children: <Todo />,\n  },\n];\n\nexport default routes;\n","import { RouteNav } from '../../src/types/index';\n\nconst routesNav: RouteNav[] = [\n  {\n    name: 'Help',\n    path: '/',\n  },\n  {\n    name: 'Todo',\n    path: '/todo',\n  },\n];\n\nexport { routesNav };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { routesNav } from '../../constants';\nimport './Navigation.css';\n\nfunction View() {\n  return (\n    <div>\n      <nav>\n        <ul className=\"nav\">\n          {routesNav.map((route, i) => (\n            <li key={`nav_${i}`} className=\"nav__item\">\n              <Link className=\"nav__item--link\" to={route.path}>\n                {route.name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </div>\n  );\n}\n\nexport default View;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport routes from './routes/index';\nimport Navigation from './components/Navigation/Navigation';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Navigation />\n      <Switch>\n        {routes.map((route, i) => (\n          <Route\n            key={`route_${i}`}\n            {...route}\n          />\n        ))}\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}