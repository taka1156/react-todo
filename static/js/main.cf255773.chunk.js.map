{"version":3,"sources":["reportWebVitals.ts","assets/img/logo.svg","pages/Help/help.tsx","components/InputDate/inputDate.tsx","components/InputText/inputText.tsx","components/Form/form.tsx","components/Button/button.tsx","components/Forms/forms.tsx","components/Checkbox/checkbox.tsx","components/Todo/todo.tsx","components/Todos/todos.tsx","logic/todoApp.ts","pages/Todo/todo.tsx","routes/index.tsx","constants/index.ts","components/Navigation/navigation.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","View","className","src","logo","alt","href","target","rel","id","labelText","setParentDate","useState","d","shift","getTime","Date","toISOString","split","convetDateToIso","date","setDate","htmlFor","type","value","onChange","e","handleChange","setParentText","text","setText","isSearch","onAddTodo","onTextSearch","inputTodo","startDate","finishDate","task","searchText","onSubmit","preventDefault","handleSubmitTextSearch","searchWord","handleSubmitAdd","btnText","onClick","stateChange","isDone","onCheck","checked","formatDate","toLocaleDateString","todo","onRemove","index","todos","map","item","i","TodoApp","getTodos","checkInput","addTodo","length","push","alert","changeState","changeIndex","checkFoolControle","window","confirm","deleteTodo","deleteIndex","filter","textSearchTodo","indexOf","this","instance","app","getInstance","setTodos","filterTodo","routes","path","exact","children","routesNav","name","route","to","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.cf255773.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport logo from '../../assets/img/logo.svg';\nimport './help.css';\n\nfunction View() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>Help</h1>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default View;\n","import React, { useState } from 'react';\nimport './inputDate.css';\n\ntype Props = {\n  id: string;\n  labelText: string;\n  setParentDate: (date: Date) => void;\n};\n\nconst convetDateToIso = (d: Date): string => {\n  const shift = d.getTime() + 9 * 60 * 60 * 1000;\n  const time = new Date(shift).toISOString().split('.')[0];\n  return time;\n};\n\nfunction View({ id, labelText, setParentDate }: Props) {\n  const [date, setDate] = useState(convetDateToIso(new Date()));\n\n  const handleChange = (e: any): void => {\n    setDate(e.target.value);\n    setParentDate(e.target.value);\n  };\n\n  return (\n    <div className=\"forms__box\">\n      <label className=\"forms__label\" htmlFor={id}>\n        {labelText}\n      </label>\n      <input\n        className=\"forms__input\"\n        id={id}\n        type=\"date\"\n        value={date}\n        onChange={(e) => handleChange(e)}\n      />\n    </div>\n  );\n}\n\nexport default View;\n","import React, { useState } from 'react';\nimport './inputText.css';\n\ntype Props = {\n  labelText: string;\n  setParentText: (text: string) => void;\n};\n\nfunction View({ labelText, setParentText }: Props) {\n  const [text, setText] = useState('');\n\n  const handleChange = (e: any): void => {\n    setText(e.target.value);\n    setParentText(e.target.value);\n  };\n\n  return (\n    <div className=\"forms__box\">\n      <label className=\"forms__label\" htmlFor=\"task\">\n        {labelText}\n      </label>\n      <input\n        className=\"forms__input\"\n        id=\"task\"\n        type=\"text\"\n        value={text}\n        onChange={(e) => handleChange(e)}\n      />\n    </div>\n  );\n}\n\nexport default View;\n","import React from 'react';\nimport { InputTodo } from 'src/types/todo';\nimport InputDateComponent from '../InputDate/inputDate';\nimport InputTextComponent from '../InputText/inputText';\nimport './form.css';\n\ntype Props = {\n  isSearch: boolean;\n  onAddTodo: (todo: InputTodo) => void;\n  onTextSearch: (searchText: string) => void;\n};\n\nfunction View({ isSearch, onAddTodo, onTextSearch }: Props) {\n  let inputTodo: InputTodo = {\n    startDate: null,\n    finishDate: null,\n    task: '',\n  };\n\n  let searchText: string = '';\n\n  const setParentStartDate = (date: Date): void => {\n    inputTodo.startDate = date;\n  };\n\n  const setParentFinishDate = (date: Date): void => {\n    inputTodo.finishDate = date;\n  };\n\n  const setParentTask = (text: string): void => {\n    inputTodo.task = text;\n  };\n\n  const handleSubmitAdd = (e: any): void => {\n    e.preventDefault();\n    onAddTodo(inputTodo);\n  };\n\n  const setParentSearchText = (searchWord: string): void => {\n    searchText = searchWord;\n  };\n\n  const handleSubmitTextSearch = (e: any): void => {\n    e.preventDefault();\n    onTextSearch(searchText);\n  };\n\n  if (!isSearch) {\n    return (\n      <form className=\"forms\" onSubmit={(e) => handleSubmitAdd(e)}>\n        <InputDateComponent\n          id=\"startDate\"\n          labelText=\"開始日\"\n          setParentDate={setParentStartDate}\n        />\n        <InputDateComponent\n          id=\"finishDate\"\n          labelText=\"終了日\"\n          setParentDate={setParentFinishDate}\n        />\n        <InputTextComponent\n          labelText=\"タスク内容\"\n          setParentText={setParentTask}\n        />\n\n        <input className=\"forms__submit\" type=\"submit\" value=\"追加\" />\n      </form>\n    );\n  } else {\n    return (\n      <form className=\"forms\" onSubmit={(e) => handleSubmitTextSearch(e)}>\n        <InputTextComponent\n          labelText=\"検索\"\n          setParentText={setParentSearchText}\n        />\n        <input className=\"forms__submit\" type=\"submit\" value=\"検索\" />\n      </form>\n    );\n  }\n}\n\nexport default View;\n","import React from 'react';\nimport './button.css';\n\ntype Props = {\n  className?: string;\n  btnText: string;\n  onClick: (e: any) => void;\n};\n\nfunction View({ className, btnText, onClick }: Props) {\n  return (\n    <button className={`${className}`} onClick={onClick}>\n      {btnText}\n    </button>\n  );\n}\n\nexport default View;\n","import React, { useState } from 'react';\nimport { InputTodo } from 'src/types/todo';\nimport FormComponent from '../Form/form';\nimport ButtonComponent from '../Button/button';\nimport './forms.css';\n\ntype Props = {\n  onAddTodo: (todo: InputTodo) => void;\n  onTextSearch: (searchText: string) => void;\n};\n\nfunction View({ onAddTodo, onTextSearch }: Props) {\n  const [isSearch, stateChange] = useState(false);\n\n  return (\n    <div>\n      <ButtonComponent\n        onClick={(e) => stateChange(!isSearch)}\n        btnText={!isSearch ? 'タスク検索' : 'タスク追加'}\n      />\n      <FormComponent isSearch={isSearch} onAddTodo={onAddTodo} onTextSearch={onTextSearch} />\n    </div>\n  );\n}\n\nexport default View;\n","import React from 'react';\nimport './checkbox.css';\n\ntype Props = {\n  isDone: boolean;\n  onCheck: () => void;\n};\n\nfunction View({ isDone, onCheck }: Props) {\n  return <input type=\"checkbox\" checked={isDone} onChange={onCheck} />;\n}\n\nexport default View;\n","import React from 'react';\nimport { Todo } from 'src/types/todo';\nimport CheckboxComponent from '../Checkbox/checkbox';\nimport ButtonComponent from '../Button/button';\n\ntype TodoProps = {\n  todo: Todo;\n  onCheck: (index: number) => void;\n  onRemove: (index: number) => void;\n};\n\nfunction formatDate(date: Date | null) {\n  /**\n   * 日付の形式を変える\n   */\n  if (date == null) return '--/--/--';\n  return new Date(date).toLocaleDateString();\n}\n\nfunction View({todo, onCheck, onRemove }: TodoProps) {\n  return (\n    <tr>\n      <td>\n        <CheckboxComponent\n          isDone={todo.isDone}\n          onCheck={() => onCheck(todo.index)}\n        />\n      </td>\n      <td>{formatDate(todo.startDate)}</td>\n      <td>{formatDate(todo.finishDate)}</td>\n      <td>{todo.task}</td>\n      <td>\n        <ButtonComponent btnText=\"x\" onClick={() => onRemove(todo.index)} />\n      </td>\n    </tr>\n  );\n}\n\nexport default View;\n","import React from 'react';\nimport { Todo } from 'src/types/todo';\nimport TodoComponent from '../Todo/todo';\nimport './todos.css';\n\ntype Props = {\n  todos: Todo[];\n  onCheck: (index: number) => void;\n  onRemove: (index: number) => void;\n};\n\nfunction View({ todos, onCheck, onRemove }: Props) {\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <th>開始日</th>\n            <th>終了日</th>\n            <th>タスク</th>\n            <th>Done</th>\n            <th>消去</th>\n          </tr>\n        </thead>\n        <tbody>\n            {todos.map((item, i) => (\n              <TodoComponent\n                key={`todo_${i}`}\n                todo={item}\n                onCheck={onCheck}\n                onRemove={onRemove}\n              />\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default View;\n","import { Todo, InputTodo } from 'src/types/todo';\n\nclass TodoApp {\n  private static instance: TodoApp;\n  todos: Todo[] = [];\n\n  private constructor() {}\n\n  public static getInstance(): TodoApp {\n    if (this.instance == null) {\n      this.instance = new TodoApp();\n      return this.instance;\n    } else {\n      return this.instance;\n    }\n  }\n\n  public getTodos = (): Todo[] => {\n    return this.todos;\n  };\n\n  private checkInput = (inputTodo: InputTodo): boolean => {\n    if (\n      inputTodo.startDate == null ||\n      inputTodo.finishDate == null ||\n      inputTodo.task === ''\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  public addTodo = (inputTodo: InputTodo): boolean => {\n    if (this.checkInput(inputTodo)) {\n      const todo: Todo = {\n        ...inputTodo,\n        index: this.todos.length,\n        isDone: false,\n      };\n      this.todos.push(todo);\n      return true;\n    }\n    alert('入力漏れがあります。');\n    return false;\n  };\n\n  public changeState = (changeIndex: number):void => {\n    this.todos[changeIndex].isDone = !this.todos[changeIndex].isDone;\n  };\n\n  private checkFoolControle = (isDone: boolean): boolean => {\n    //　すでに達成済み\n    if (isDone) return true;\n    // 達成してないのに消そうとしている\n    const isOK = window.confirm(\n      '終了していないタスクを削除しようとしています。\\nよろしいですか?'\n    );\n    return isOK;\n  };\n\n  public deleteTodo = (deleteIndex: number): void => {\n    const isDone = this.todos[deleteIndex].isDone;\n    if (this.checkFoolControle(isDone)) {\n      this.todos = this.todos.filter((todo, i) => deleteIndex !== i);\n    }\n  };\n\n  public textSearchTodo = (searchText: string): Todo[] => {\n    return this.todos.filter((todo) => todo.task.indexOf(searchText) !== -1);\n  };\n}\n\nexport { TodoApp };\n","import React, { useState } from 'react';\nimport { Todo } from 'src/types/todo';\nimport './todo.css';\nimport FormsComponent from '../../components/Forms/forms';\nimport TodosComponent from '../../components/Todos/todos';\nimport { TodoApp } from '../../logic/todoApp';\nimport { InputTodo } from 'src/types/todo';\n\nconst app = TodoApp.getInstance();\n\n/*const dummyTodo: Todo = {\n  startDate: new Date(0),\n  finishDate: new Date(-8640000000000000),\n  task: 'AtCoderを進める(dummy)',\n  isDone: false,\n};*/\n\nfunction View() {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const addTodo = (inputTodo: InputTodo): void => {\n    const isSuccess = app.addTodo(inputTodo);\n    if (isSuccess) {\n      setTodos([...app.getTodos()]);\n    }\n  };\n\n  const deleteTodo = (index: number): void => {\n    app.deleteTodo(index);\n    setTodos([...app.getTodos()]);\n  };\n\n  const changeTodo = (index: number): void => {\n    app.changeState(index);\n    setTodos([...app.getTodos()]);\n  };\n\n  const textSeachTodo = (searchText: string): void => {\n    const filterTodo = app.textSearchTodo(searchText);\n    setTodos([...filterTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <main className=\"App-body\">\n        <h1>Todo</h1>\n        <FormsComponent onAddTodo={addTodo} onTextSearch={textSeachTodo} />\n        <TodosComponent\n          todos={todos}\n          onCheck={changeTodo}\n          onRemove={deleteTodo}\n        />\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </main>\n    </div>\n  );\n}\n\nexport default View;\n","import { Route } from '../../src/types/index';\nimport Help from '../pages/Help/help';\nimport Todo from '../pages/Todo/todo';\n\nconst routes: Route[] = [\n  {\n    path: '/',\n    exact: true,\n    children: <Help />,\n  },\n  {\n    path: '/todo',\n    children: <Todo />,\n  },\n];\n\nexport default routes;\n","import { RouteNav } from '../../src/types/index';\n\nconst routesNav: RouteNav[] = [\n  {\n    name: 'Help',\n    path: '/',\n  },\n  {\n    name: 'Todo',\n    path: '/todo',\n  },\n];\n\nexport { routesNav };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { routesNav } from '../../constants';\nimport './navigation.css';\n\nfunction View() {\n  return (\n    <div>\n      <nav>\n        <ul className=\"nav\">\n          {routesNav.map((route, i) => (\n            <li key={`nav_${i}`} className=\"nav__item\">\n              <Link className=\"nav__item--link\" to={route.path}>\n                {route.name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </div>\n  );\n}\n\nexport default View;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport routes from './routes/index';\nimport Navigation from './components/Navigation/navigation';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Navigation />\n      <Switch>\n        {routes.map((route, i) => (\n          <Route\n            key={`route_${i}`}\n            {...route}\n          />\n        ))}\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}