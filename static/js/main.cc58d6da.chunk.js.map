{"version":3,"sources":["reportWebVitals.ts","assets/img/logo.svg","pages/Help/help.tsx","components/BaseErrors/BaseErrors.tsx","components/BaseInputText/BaseInputText.tsx","components/Form/TodoAddForm/TodoAddForm.tsx","components/Form/TodoSearchForm/TodoSearchForm.tsx","components/BaseBtn/BaseBtn.tsx","components/Forms/Forms.tsx","components/BaseInputCheckbox/BaseInputCheckbox.tsx","components/TodoItem/TodoItem.tsx","components/TodoTable/TodoTable.tsx","logic/todoApp.ts","pages/Todo/todo.tsx","routes/index.tsx","constants/index.ts","components/Navigation/Navigation.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","View","className","src","logo","alt","href","target","rel","errors","map","error","i","id","name","labelText","type","register","htmlFor","ref","onAddTodo","useForm","handleSubmit","reset","useState","setErrors","onSubmit","values","tmp","startDate","push","finishDate","task","length","validate","todo","index","Date","isDone","value","onSearchTodo","data","searchText","btnText","onClick","isSearch","stateChange","onCheck","checked","onChange","formatDate","date","toLocaleDateString","onRemove","todos","item","TodoApp","getTodos","addTodo","inputTodo","changeState","changeIndex","checkFoolControle","window","confirm","deleteTodo","deleteIndex","filter","textSearchTodo","FILTER_TODOS","indexOf","this","instance","app","getInstance","setTodos","filterTodo","routes","path","exact","children","routesNav","route","to","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.cc58d6da.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport logo from '../../assets/img/logo.svg';\nimport './help.css';\n\nconst View = (): JSX.Element => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>Help</h1>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n};\n\nexport default View;\n","import React from 'react';\nimport './BaseErrors.css';\n\ntype Props = {\n  errors: string[];\n};\n\nconst View = ({ errors }: Props): JSX.Element => {\n  return (\n    <>\n      {errors.map((error, i) => (\n        <p className=\"base-errors\" key={`error_${i}`}>\n          {error}\n        </p>\n      ))}\n    </>\n  );\n};\n\nexport default View;\n","import React from 'react';\nimport { InputType } from 'src/types/input';\nimport './BaseInputText.css';\n\nconst View = ({\n  id,\n  name,\n  labelText,\n  type,\n  register,\n}: InputType): JSX.Element => {\n  return (\n    <div className=\"form__box\">\n      <label className=\"form__label\" htmlFor={id}>\n        {labelText}\n      </label>\n      <input\n        className=\"form__input\"\n        id={id}\n        name={name}\n        type={type}\n        ref={register}\n      />\n    </div>\n  );\n};\n\nexport default View;\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { InputType } from 'src/types/input';\nimport { Todo } from 'src/types/todo';\nimport BaseErrors from '../../BaseErrors/BaseErrors';\nimport BaseInputText from '../../BaseInputText/BaseInputText';\nimport '../forms.css';\n\ntype Props = {\n  onAddTodo: (todo: Todo) => void;\n};\n\ntype InputTodo = {\n  startDate: string;\n  finishDate: string;\n  task: string;\n};\n\nconst View = ({ onAddTodo }: Props): JSX.Element => {\n  const { register, handleSubmit, reset } = useForm<InputType>();\n  const [errors, setErrors] = useState<string[]>([]);\n\n  const validate = (values: InputTodo): number => {\n    const tmp: string[] = [];\n\n    if (values.startDate === '') {\n      tmp.push('開始日が入っていません。');\n    }\n\n    if (values.finishDate === '') {\n      tmp.push('終了日が入っていません。');\n    }\n\n    if (values.task === '') {\n      tmp.push('タスクが入っていません。');\n    }\n\n    setErrors(tmp);\n    return tmp.length;\n  };\n\n  const onSubmit = (values: InputTodo): void => {\n    if (validate(values) === 0) {\n      const todo: Todo = {\n        index: 0,\n        startDate: new Date(values.startDate),\n        finishDate: new Date(values.finishDate),\n        task: values.task,\n        isDone: false,\n      };\n      onAddTodo(todo);\n      reset();\n    }\n  };\n\n  return (\n    <>\n      <BaseErrors errors={errors} />\n      <form className=\"forms\" onSubmit={handleSubmit(onSubmit)}>\n        <BaseInputText\n          id=\"startDate\"\n          name=\"startDate\"\n          labelText=\"開始日\"\n          type=\"date\"\n          register={register}\n        />\n        <BaseInputText\n          id=\"finishDate\"\n          name=\"finishDate\"\n          labelText=\"終了日\"\n          type=\"date\"\n          register={register}\n        />\n        <BaseInputText\n          id=\"task\"\n          name=\"task\"\n          labelText=\"タスク内容\"\n          type=\"text\"\n          register={register}\n        />\n\n        <input className=\"forms__submit\" type=\"submit\" value=\"追加\" />\n      </form>\n    </>\n  );\n};\n\nexport default View;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { InputType } from 'src/types/input';\nimport BaseInputText from '../../BaseInputText/BaseInputText';\nimport '../forms.css';\n\ntype Props = {\n  onSearchTodo: (searchText: string) => void;\n};\n\ntype InputSearch = {\n  searchText: string;\n};\n\nconst View = ({ onSearchTodo }: Props): JSX.Element => {\n  const { register, handleSubmit } = useForm<InputType>();\n\n  const onSubmit = (data: InputSearch): void => {\n    onSearchTodo(data.searchText);\n  };\n\n  return (\n    <form className=\"forms\" onSubmit={handleSubmit(onSubmit)}>\n      <BaseInputText\n        id=\"search\"\n        name=\"searchText\"\n        labelText=\"検索\"\n        type=\"text\"\n        register={register}\n      />\n      <input className=\"forms__submit\" type=\"submit\" value=\"検索\" />\n    </form>\n  );\n};\n\nexport default View;\n","import React from 'react';\nimport './BaseBtn.css';\n\ntype Props = {\n  btnText: string;\n  onClick: () => void;\n};\n\nconst View = ({ btnText, onClick }: Props): JSX.Element => {\n  return (\n    <button className=\"base-btn\" onClick={onClick}>\n      {btnText}\n    </button>\n  );\n};\n\nexport default View;\n","import React, { useState } from 'react';\nimport { Todo } from 'src/types/todo';\nimport AddForm from '../Form/TodoAddForm/TodoAddForm';\nimport SearchForm from '../Form/TodoSearchForm/TodoSearchForm';\nimport BaseBtn from '../BaseBtn/BaseBtn';\nimport './Forms.css';\n\ntype Props = {\n  onAddTodo: (todo: Todo) => void;\n  onSearchTodo: (searchText: string) => void;\n};\n\nconst View = ({ onAddTodo, onSearchTodo }: Props): JSX.Element => {\n  const [isSearch, stateChange] = useState(false);\n\n  const modeChange = (): void => {\n    stateChange(!isSearch);\n    onSearchTodo(''); //初期化\n  };\n\n  return (\n    <div>\n      <BaseBtn\n        onClick={() => modeChange()}\n        btnText={!isSearch ? 'タスク検索' : 'タスク追加'}\n      />\n      {!isSearch ? (\n        <AddForm onAddTodo={onAddTodo} />\n      ) : (\n        <SearchForm onSearchTodo={onSearchTodo} />\n      )}\n    </div>\n  );\n};\n\nexport default View;\n","import React from 'react';\nimport './BaseInputCheckbox.css';\n\ntype Props = {\n  isDone: boolean;\n  onCheck: () => void;\n};\n\nconst View = ({ isDone, onCheck }: Props): JSX.Element => {\n  return (\n    <input\n      className=\"base-input-checkbox\"\n      type=\"checkbox\"\n      checked={isDone}\n      onChange={onCheck}\n    />\n  );\n};\n\nexport default View;\n","import React from 'react';\nimport { Todo } from 'src/types/todo';\nimport BaseInputCheckbox from '../BaseInputCheckbox/BaseInputCheckbox';\nimport BaseBtn from '../BaseBtn/BaseBtn';\nimport './TodoItem.css';\n\ntype Props = {\n  todo: Todo;\n  onCheck: (index: number) => void;\n  onRemove: (index: number) => void;\n};\n\nfunction formatDate(date: Date | null): string {\n  /**\n   * 日付の形式を変える\n   */\n  if (date == null) return '--/--/--';\n  return new Date(date).toLocaleDateString();\n}\n\nconst View = ({ todo, onCheck, onRemove }: Props): JSX.Element => {\n  return (\n    <tr className=\"todo-table-item\">\n      <td>\n        <BaseInputCheckbox\n          isDone={todo.isDone}\n          onCheck={() => onCheck(todo.index)}\n        />\n      </td>\n      <td>{formatDate(todo.startDate)}</td>\n      <td>{formatDate(todo.finishDate)}</td>\n      <td>{todo.task}</td>\n      <td>\n        <BaseBtn btnText=\"x\" onClick={() => onRemove(todo.index)} />\n      </td>\n    </tr>\n  );\n};\n\nexport default View;\n","import React from 'react';\nimport { Todo } from 'src/types/todo';\nimport TodoItem from '../TodoItem/TodoItem';\nimport './TodoTable.css';\n\ntype Props = {\n  todos: Todo[];\n  onCheck: (index: number) => void;\n  onRemove: (index: number) => void;\n};\n\nconst View = ({ todos, onCheck, onRemove }: Props): JSX.Element => {\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <th>Done</th>\n            <th>開始日</th>\n            <th>終了日</th>\n            <th>タスク</th>\n            <th>消去</th>\n          </tr>\n        </thead>\n        <tbody>\n          {todos.map((item, i) => (\n            <TodoItem\n              key={`todo_${i}`}\n              todo={item}\n              onCheck={onCheck}\n              onRemove={onRemove}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default View;\n","import { Todo } from 'src/types/todo';\n\nclass TodoApp {\n  private static instance: TodoApp;\n  todos: Todo[] = [];\n\n  private constructor() {\n    //...\n  }\n\n  public static getInstance(): TodoApp {\n    if (this.instance == null) {\n      this.instance = new TodoApp();\n      return this.instance;\n    } else {\n      return this.instance;\n    }\n  }\n\n  public getTodos = (): Todo[] => {\n    return this.todos;\n  };\n\n  public addTodo = (inputTodo: Todo): void => {\n    inputTodo.index = this.todos.length;\n    this.todos.push(inputTodo);\n  };\n\n  public changeState = (changeIndex: number): void => {\n    this.todos[changeIndex].isDone = !this.todos[changeIndex].isDone;\n  };\n\n  private checkFoolControle = (isDone: boolean): boolean => {\n    // すでに達成済み\n    if (isDone) return true;\n    // 達成してないのに消そうとしている\n    const isOK = window.confirm(\n      '終了していないタスクを削除しようとしています。\\nよろしいですか?'\n    );\n    return isOK;\n  };\n\n  public deleteTodo = (deleteIndex: number): void => {\n    const isDone = this.todos[deleteIndex].isDone;\n    if (this.checkFoolControle(isDone)) {\n      this.todos = this.todos.filter((todo, i) => deleteIndex !== i);\n    }\n  };\n\n  public textSearchTodo = (searchText: string): Todo[] => {\n    const FILTER_TODOS = this.todos.filter(\n      todo => todo.task.indexOf(searchText) !== -1\n    );\n\n    if (FILTER_TODOS.length > 0) {\n      return FILTER_TODOS;\n    } else {\n      return this.todos;\n    }\n  };\n}\n\nexport { TodoApp };\n","import React, { useState } from 'react';\nimport { Todo } from 'src/types/todo';\nimport Forms from '../../components/Forms/Forms';\nimport Todos from '../../components/TodoTable/TodoTable';\nimport './todo.css';\nimport { TodoApp } from '../../logic/todoApp';\n\nconst app = TodoApp.getInstance();\n\nconst View = (): JSX.Element => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const addTodo = (todo: Todo): void => {\n    app.addTodo(todo);\n    setTodos([...app.getTodos()]);\n  };\n\n  const deleteTodo = (index: number): void => {\n    app.deleteTodo(index);\n    setTodos([...app.getTodos()]);\n  };\n\n  const changeTodo = (index: number): void => {\n    app.changeState(index);\n    setTodos([...app.getTodos()]);\n  };\n\n  const searchTodo = (searchText: string): void => {\n    const filterTodo = app.textSearchTodo(searchText);\n    setTodos([...filterTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <main className=\"App-body\">\n        <h1>Todo</h1>\n        <Forms onAddTodo={addTodo} onSearchTodo={searchTodo} />\n        <Todos todos={todos} onCheck={changeTodo} onRemove={deleteTodo} />\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </main>\n    </div>\n  );\n};\n\nexport default View;\n","import React from 'react';\nimport { Route } from 'src/types/index';\nimport Help from '../pages/Help/help';\nimport Todo from '../pages/Todo/todo';\n\nconst routes: Route[] = [\n  {\n    path: '/',\n    exact: true,\n    children: <Help />,\n  },\n  {\n    path: '/todo',\n    children: <Todo />,\n  },\n];\n\nexport default routes;\n","import { RouteNav } from '../../src/types/index';\n\nconst routesNav: RouteNav[] = [\n  {\n    name: 'Help',\n    path: '/',\n  },\n  {\n    name: 'Todo',\n    path: '/todo',\n  },\n];\n\nexport { routesNav };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { routesNav } from '../../constants';\nimport './Navigation.css';\n\nconst View = (): JSX.Element => {\n  return (\n    <div>\n      <nav>\n        <ul className=\"nav\">\n          {routesNav.map((route, i) => (\n            <li key={`nav_${i}`} className=\"nav__item\">\n              <Link className=\"nav__item--link\" to={route.path}>\n                {route.name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default View;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport routes from './routes/index';\nimport Navigation from './components/Navigation/Navigation';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Navigation />\n      <Switch>\n        {routes.map((route, i) => (\n          <Route key={`route_${i}`} {...route} />\n        ))}\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}